namespace sign {
	// Encoding "borrowed" from signs_lib fork at: https://github.com/lord-server/lord

	const st = string.char;

	st(208) + String.fromCharCode(130);

	const ansi_decode: Dictionary<number, string> = {
		[128]: st(208) + st(130),
		[129]: st(208) + st(131),
		[130]: st(226) + st(128) + st(154),
		[131]: st(209) + st(147),
		[132]: st(226) + st(128) + st(158),
		[133]: st(226) + st(128) + st(166),
		[134]: st(226) + st(128) + st(160),
		[135]: st(226) + st(128) + st(161),
		[136]: st(226) + st(130) + st(172),
		[137]: st(226) + st(128) + st(176),
		[138]: st(208) + st(137),
		[139]: st(226) + st(128) + st(185),
		[140]: st(208) + st(138),
		[141]: st(208) + st(140),
		[142]: st(208) + st(139),
		[143]: st(208) + st(143),
		[144]: st(209) + st(146),
		[145]: st(226) + st(128) + st(152),
		[146]: st(226) + st(128) + st(153),
		[147]: st(226) + st(128) + st(156),
		[148]: st(226) + st(128) + st(157),
		[149]: st(226) + st(128) + st(162),
		[150]: st(226) + st(128) + st(147),
		[151]: st(226) + st(128) + st(148),
		[152]: st(194) + st(152),
		[153]: st(226) + st(132) + st(162),
		[154]: st(209) + st(153),
		[155]: st(226) + st(128) + st(186),
		[156]: st(209) + st(154),
		[157]: st(209) + st(156),
		[158]: st(209) + st(155),
		[159]: st(209) + st(159),
		[160]: st(194) + st(160),
		[161]: st(209) + st(142),
		[162]: st(209) + st(158),
		[163]: st(208) + st(136),
		[164]: st(194) + st(164),
		[165]: st(210) + st(144),
		[166]: st(194) + st(166),
		[167]: st(194) + st(167),
		[168]: st(208) + st(129),
		[169]: st(194) + st(169),
		[170]: st(208) + st(132),
		[171]: st(194) + st(171),
		[172]: st(194) + st(172),
		[173]: st(194) + st(173),
		[174]: st(194) + st(174),
		[175]: st(208) + st(135),
		[176]: st(194) + st(176),
		[177]: st(194) + st(177),
		[178]: st(208) + st(134),
		[179]: st(209) + st(150),
		[180]: st(210) + st(145),
		[181]: st(194) + st(181),
		[182]: st(194) + st(182),
		[183]: st(194) + st(183),
		[184]: st(209) + st(145),
		[185]: st(226) + st(132) + st(150),
		[186]: st(209) + st(148),
		[187]: st(194) + st(187),
		[188]: st(209) + st(152),
		[189]: st(208) + st(133),
		[190]: st(209) + st(149),
		[191]: st(209) + st(151),
	};

	// local utf8_decode = {
	// 	[128] = {
	// 		[147] = "\150",
	// 		[148] = "\151",
	// 		[152] = "\145",
	// 		[153] = "\146",
	// 		[154] = "\130",
	// 		[156] = "\147",
	// 		[157] = "\148",
	// 		[158] = "\132",
	// 		[160] = "\134",
	// 		[161] = "\135",
	// 		[162] = "\149",
	// 		[166] = "\133",
	// 		[176] = "\137",
	// 		[185] = "\139",
	// 		[186] = "\155"
	// 	},
	// 	[130] = {[172] = "\136"},
	// 	[132] = {[150] = "\185", [162] = "\153"},
	// 	[194] = {
	// 		[152] = "\152",
	// 		[160] = "\160",
	// 		[164] = "\164",
	// 		[166] = "\166",
	// 		[167] = "\167",
	// 		[169] = "\169",
	// 		[171] = "\171",
	// 		[172] = "\172",
	// 		[173] = "\173",
	// 		[174] = "\174",
	// 		[176] = "\176",
	// 		[177] = "\177",
	// 		[181] = "\181",
	// 		[182] = "\182",
	// 		[183] = "\183",
	// 		[187] = "\187"
	// 	},
	// 	[208] = {
	// 		[129] = "\168",
	// 		[130] = "\128",
	// 		[131] = "\129",
	// 		[132] = "\170",
	// 		[133] = "\189",
	// 		[134] = "\178",
	// 		[135] = "\175",
	// 		[136] = "\163",
	// 		[137] = "\138",
	// 		[138] = "\140",
	// 		[139] = "\142",
	// 		[140] = "\141",
	// 		[143] = "\143",
	// 		[144] = "\192",
	// 		[145] = "\193",
	// 		[146] = "\194",
	// 		[147] = "\195",
	// 		[148] = "\196",
	// 		[149] = "\197",
	// 		[150] = "\198",
	// 		[151] = "\199",
	// 		[152] = "\200",
	// 		[153] = "\201",
	// 		[154] = "\202",
	// 		[155] = "\203",
	// 		[156] = "\204",
	// 		[157] = "\205",
	// 		[158] = "\206",
	// 		[159] = "\207",
	// 		[160] = "\208",
	// 		[161] = "\209",
	// 		[162] = "\210",
	// 		[163] = "\211",
	// 		[164] = "\212",
	// 		[165] = "\213",
	// 		[166] = "\214",
	// 		[167] = "\215",
	// 		[168] = "\216",
	// 		[169] = "\217",
	// 		[170] = "\218",
	// 		[171] = "\219",
	// 		[172] = "\220",
	// 		[173] = "\221",
	// 		[174] = "\222",
	// 		[175] = "\223",
	// 		[176] = "\224",
	// 		[177] = "\225",
	// 		[178] = "\226",
	// 		[179] = "\227",
	// 		[180] = "\228",
	// 		[181] = "\229",
	// 		[182] = "\230",
	// 		[183] = "\231",
	// 		[184] = "\232",
	// 		[185] = "\233",
	// 		[186] = "\234",
	// 		[187] = "\235",
	// 		[188] = "\236",
	// 		[189] = "\237",
	// 		[190] = "\238",
	// 		[191] = "\239"
	// 	},
	// 	[209] = {
	// 		[128] = "\240",
	// 		[129] = "\241",
	// 		[130] = "\242",
	// 		[131] = "\243",
	// 		[132] = "\244",
	// 		[133] = "\245",
	// 		[134] = "\246",
	// 		[135] = "\247",
	// 		[136] = "\248",
	// 		[137] = "\249",
	// 		[138] = "\250",
	// 		[139] = "\251",
	// 		[140] = "\252",
	// 		[141] = "\253",
	// 		[142] = "\254",
	// 		[143] = "\255",
	// 		[144] = "\161",
	// 		[145] = "\184",
	// 		[146] = "\144",
	// 		[147] = "\131",
	// 		[148] = "\186",
	// 		[149] = "\190",
	// 		[150] = "\179",
	// 		[151] = "\191",
	// 		[152] = "\188",
	// 		[153] = "\154",
	// 		[154] = "\156",
	// 		[155] = "\158",
	// 		[156] = "\157",
	// 		[158] = "\162",
	// 		[159] = "\159"
	// 	},
	// 	[210] = {[144] = "\165", [145] = "\180"}
	// }

	// local nmdc = {
	// 	[36] = "$",
	// 	[124] = "|"
	// }

	// function AnsiToUtf8(s)
	// 	local r, b = ""
	// 	for i = 1, s and s:len() or 0 do
	// 		b = s:byte(i)
	// 		if b < 128 then
	// 			r = r + string.char(b)
	// 		else
	// 			if b > 239 then
	// 				r = r + "\209" + string.char(b - 112)
	// 			elseif b > 191 then
	// 				r = r + "\208" + string.char(b - 48)
	// 			elseif ansi_decode[b] then
	// 				r = r + ansi_decode[b]
	// 			else
	// 				r = r + "_"
	// 			end
	// 		end
	// 	end
	// 	return r
	// end

	// function Utf8ToAnsi(s)
	// 	local a, j, r, b = 0, 0, ""
	// 	for i = 1, s and s:len() or 0 do
	// 		b = s:byte(i)
	// 		if b < 128 then
	// 			if nmdc[b] then
	// 				r = r + nmdc[b]
	// 			else
	// 				r = r + string.char(b)
	// 			end
	// 		elseif a == 2 then
	// 			a, j = a - 1, b
	// 		elseif a == 1 then
	// 			//if j == nil or b == nil then return r end
	// 			//print(j)
	// 			//print(b)
	// 			//local ansi = utf8_decode[j]
	// 			//if ansi == nil then return r end
	// 			//if ansi[b] == nil then return r end
	// 			if utf8_decode[j] then
	// 				if utf8_decode[j][b] then
	// 					a, r = a - 1, r + utf8_decode[j][b]
	// 				end
	// 			end
	// 		elseif b == 226 then
	// 			a = 2
	// 		elseif b == 194 or b == 208 or b == 209 or b == 210 then
	// 			j, a = b, 1
	// 		else
	// 			r = r + "_"
	// 		end
	// 	end
	// 	return r
	// end
}
